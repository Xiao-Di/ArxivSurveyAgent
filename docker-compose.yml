version: '3.8'

services:
  # 主应用服务
  literature-review-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: literature-review-backend
    ports:
      - "0.0.0.0:8000:8000"
    environment:
      # 基础配置
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DEBUG=${DEBUG:-false}
      - LLM_PROVIDER=${LLM_PROVIDER:-deepseek}
      - UVICORN_WORKERS=${UVICORN_WORKERS:-1}
      
      # 数据库配置
      - CHROMA_PERSIST_DIRECTORY=/app/data/chroma_db
      - OUTPUT_DIR=/app/data/outputs
      
      # Redis 缓存配置
      - REDIS_URL=redis://redis:6379
      
      # API 密钥 (从环境变量或 .env 文件获取)
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SEMANTIC_SCHOLAR_API_KEY=${SEMANTIC_SCHOLAR_API_KEY}
      
    volumes:
      # 持久化数据
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config/.env:/app/.env:ro
      
    depends_on:
      - redis
      - chromadb
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
    restart: unless-stopped
    
    networks:
      - literature-review-network

  # Redis 缓存服务
  redis:
    image: redis:7-alpine
    container_name: literature-review-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory ${REDIS_MAXMEMORY:-256mb} --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - literature-review-network

  # ChromaDB 向量数据库
  chromadb:
    image: chromadb/chroma:0.4.20
    container_name: literature-review-chromadb
    ports:
      - "8001:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - literature-review-network

  # Nginx 反向代理 (生产环境)
  nginx:
    image: nginx:alpine
    container_name: literature-review-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - literature-review-app
    restart: unless-stopped
    networks:
      - literature-review-network
    # 仅在生产环境启用
    profiles:
      - production

  # 监控服务 (可选)
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: literature-review-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - literature-review-network
    profiles:
      - monitoring

  # Grafana 仪表板 (可选)
  grafana:
    image: grafana/grafana:10.2.0
    container_name: literature-review-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-PaperSurveyAgentAdmin2024!}
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - literature-review-network
    profiles:
      - monitoring

# 网络配置
networks:
  literature-review-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# 持久化卷
volumes:
  redis_data:
    driver: local
  chroma_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

# 开发环境覆盖配置
# 使用: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up 